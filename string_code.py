# -*- coding: utf-8 -*-
"""String code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KTcdg9rHkiM9GnqKJNa_5wPiP4bgOHDP

# **`TCS CODING QUESTIONS`**

**Problem Statement –** Given a string S(input consisting) of ‘+’ and ‘#’. The length of the string is variable. The task is to find the minimum number of ‘+’ or ‘#’ to make it a valid string. The string is considered valid if the number of ‘+’ and ‘#’ are equal. The ‘+’ and ‘#’ can be at any position in the string.
Note : The output will be a positive or negative integer based on number of ‘+’ and ‘#’ in the input string.

(+>#): positive integer<br>
(#>+): negative integer<br>
(#=+): 0<br><br>
Example 1:<br>
Input 1:

 '###+++'   -> Value of S<br>
Output :
0   → number of + and # are equal
"""

def validstr(str):
  a=0
  b=0
  for i in str:
    if i=="+":
      a+=1
    elif i=="#":
      b+=1
  return (a-b)

str1='###+++'
print(validstr(str1))

str2='##+++'
print(validstr(str2))

str3='###+'
print(validstr(str3))

"""# **Given an integer array Arr of size N the task is to find the count of elements whose value is greater than all of its prior elements.**

*Note : 1st element of the array should be considered in the count of the result*.

**For example,**<br>
Arr[]={7,4,8,2,9}<br>
*As 7 is the first element, it will consider in the result.
8 and 9 are also the elements that are greater than all of its previous elements.<br>
Since total of  3 elements is present in the array that meets the condition.<br>
Hence the output = 3.*<br><br>
Example 1:<br>

Input <br>
5 -> Value of N, represents size of Arr<br>
7-> Value of Arr[0]<br>
4 -> Value of Arr[1]<br>
8-> Value of Arr[2]<br>
2-> Value of Arr[3]<br>
9-> Value of Arr[4]<br>

Output :<br>
3<br>

Example 2:<br>
5   -> Value of N, represents size of Arr<br>
3  -> Value of Arr[0]<br>
4 -> Value of Arr[1]<br>
5 -> Value of Arr[2]<br>
8 -> Value of Arr[3]<br>
9 -> Value of Arr[4]<br>

Output : <br>
5

Constraints

1<=N<=20<br>
1<=Arr[i]<=10000
"""

def gprior(arr):
  count=1
  max=arr[0]
  for i in range(1,len(arr)):
    if arr[i]>max:
      count+=1
      max=arr[i]
  return count

arr=[7,4,8,2,9]
print(gprior(arr))

"""# **540. Single Element in a Sorted Array**


You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once.

Return the single element that appears only once.

Your solution must run in O(log n) time and O(1) space.



Example 1:

Input: nums = [1,1,2,3,3,4,4,8,8]<br>
Output: 2<br><br>
Example 2:

Input: nums = [3,3,7,7,10,11,11]<br>
Output: 10<br>


Constraints:

1 <= nums.length <= 105
0 <= nums[i] <= 105


***leetcode problem based on binary search approach***
"""

def singleNonDuplicate(nums):
      i=0
      j=len(nums)-1
      while i<j:
          mid=(i+j)//2
          if mid % 2 ==1:
              mid -= 1
          if nums[mid] != nums[mid + 1]:
              j=mid
          else:
              i=mid+2
      return nums[i]

nums=[1,1,2,3,3,4,4,8,8]
print(singleNonDuplicate(nums))

4%2

"""# **Check the two string are isomorphic to each other or not.**

str1=aab<br>
str2=xxy

output=1 , it is isomorphic

str1=aabbab<br>
str2=xxyyxy

output= 1

str1=aab<br>
str2=xyy

output= 0


"""

def is_isomorphic(str1, str2):
    if len(str1) != len(str2):
        return False

    char_map_1 = {}
    char_map_2 = {}

    for i in range(len(str1)):
        char1 = str1[i]
        char2 = str2[i]

        if char1 in char_map_1:
            if char_map_1[char1] != char2:
                return False
        else:
            char_map_1[char1] = char2

        if char2 in char_map_2:
            if char_map_2[char2] != char1:
                return False
        else:
            char_map_2[char2] = char1

    return True

print(is_isomorphic("aab", "xxy"))
print(is_isomorphic("aabbab", "xxyyxy"))
print(is_isomorphic("aab", "xyy"))

"""Count the word no.of times occurence"""

def countword(str):
  str=str.split()
  i=0
  while i<len(str):
    count=0
    for j in str:
      if str[i]==j:
        count+=1
    print(str[i],count)
    i+=1
str=input("Enter word")
countword(str)

"""Remove Special charater"""

str1="sa@chin"
special="@#$%^&*"
for i in special:
  str1=str1.replace(i,"")
print(str1)

str1="Sachin@ Jadha@v"
b=""
for i in str1:
  if i.isalnum() or i.isspace() or i=="?":
    b+=i
print(b)

"""common between two string"""

str1="Sachin Jadhav"
str2="hellow i am Sachin Jadhav"
a=str1.split()
b=str2.split()
c=[]
for i in a:
  if i in b:
    c.append(i)
print(" ".join(c))

#Using Set and intersection

str1="Sachin Jadhav"
str2="hellow i am Sachin Jadhav"
a=set(str1.split())
b=set(str2.split())

common=list(a.intersection(b))
print(" ".join(common))

"""# **Count Smallest and larget word in string**"""

str="Sachin is good boy"
word=str.split()
largest=small=word[0]
for i in range(0,len(word)):
  if len(largest)<len(word[i]):
    largest=word[i]
  if len(small)>len(word[i]):
    small=word[i]
print("largest : ",largest)
print("small word : ", small)

"""# **Remove duplicate character in string**"""

str="hello"
str1=""
for i in str:
  if i not in str1:
    str1=str1+i
print(str1)

# Using Array
str="hello"
str1=""
st=[]
for i in str:
  if i not in str1:
    str1=str1+i
    st.append(i)
print(" ".join(st))

